{"$message_type":"diagnostic","message":"unused import: `Separator`","code":{"code":"unused_imports","explanation":null},"level":"error","spans":[{"file_name":"src/queens.rs","byte_start":255,"byte_end":264,"line_start":6,"line_end":6,"column_start":60,"column_end":69,"is_primary":true,"text":[{"text":"    vec2, Area, Button, Color32, Id, Pos2, Rect, RichText, Separator, TextEdit, Ui, Vec2,","highlight_start":60,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`-D unused-imports` implied by `-D warnings`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to override `-D warnings` add `#[allow(unused_imports)]`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/queens.rs","byte_start":253,"byte_end":264,"line_start":6,"line_end":6,"column_start":58,"column_end":69,"is_primary":true,"text":[{"text":"    vec2, Area, Button, Color32, Id, Pos2, Rect, RichText, Separator, TextEdit, Ui, Vec2,","highlight_start":58,"highlight_end":69}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: unused import: `Separator`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/queens.rs:6:60\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    vec2, Area, Button, Color32, Id, Pos2, Rect, RichText, Separator, TextEdit, Ui, Vec2,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `-D unused-imports` implied by `-D warnings`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: to override `-D warnings` add `#[allow(unused_imports)]`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"field `area` is never read","code":{"code":"dead_code","explanation":null},"level":"error","spans":[{"file_name":"src/game_error.rs","byte_start":169,"byte_end":173,"line_start":8,"line_end":8,"column_start":5,"column_end":9,"is_primary":false,"text":[{"text":"    Area { area: ColoredArea },","highlight_start":5,"highlight_end":9}],"label":"field in this variant","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/game_error.rs","byte_start":176,"byte_end":180,"line_start":8,"line_end":8,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    Area { area: ColoredArea },","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`GameError` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`-D dead-code` implied by `-D warnings`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to override `-D warnings` add `#[allow(dead_code)]`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: field `area` is never read\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/game_error.rs:8:12\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Area { area: ColoredArea },\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfield in this variant\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `GameError` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `-D dead-code` implied by `-D warnings`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: to override `-D warnings` add `#[allow(dead_code)]`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"associated items `from_areas` and `get_color` are never used","code":{"code":"dead_code","explanation":null},"level":"error","spans":[{"file_name":"src/layout.rs","byte_start":1430,"byte_end":1441,"line_start":74,"line_end":74,"column_start":1,"column_end":12,"is_primary":false,"text":[{"text":"impl Layout {","highlight_start":1,"highlight_end":12}],"label":"associated items in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/layout.rs","byte_start":1451,"byte_end":1461,"line_start":75,"line_end":75,"column_start":8,"column_end":18,"is_primary":true,"text":[{"text":"    fn from_areas(areas: Vec<ColoredArea>) -> Layout {","highlight_start":8,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/layout.rs","byte_start":2320,"byte_end":2329,"line_start":104,"line_end":104,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    fn get_color(&self, coord: ColoredArea) -> u8 {","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: associated items `from_areas` and `get_color` are never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/layout.rs:75:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Layout {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12massociated items in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn from_areas(areas: Vec<ColoredArea>) -> Layout {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_color(&self, coord: ColoredArea) -> u8 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"function `section_to_int` is never used","code":{"code":"dead_code","explanation":null},"level":"error","spans":[{"file_name":"src/layout.rs","byte_start":2405,"byte_end":2419,"line_start":109,"line_end":109,"column_start":4,"column_end":18,"is_primary":true,"text":[{"text":"fn section_to_int(args: Vec<Section>) -> Vec<usize> {","highlight_start":4,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: function `section_to_int` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/layout.rs:109:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn section_to_int(args: Vec<Section>) -> Vec<usize> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true","code":{"code":"clippy::from_over_into","explanation":null},"level":"error","spans":[{"file_name":"src/layout.rs","byte_start":425,"byte_end":453,"line_start":23,"line_end":23,"column_start":1,"column_end":29,"is_primary":true,"text":[{"text":"impl Into<Section> for usize {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`-D clippy::from-over-into` implied by `-D warnings`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to override `-D warnings` add `#[allow(clippy::from_over_into)]`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"replace the `Into` implementation with `From<usize>`","code":null,"level":"help","spans":[{"file_name":"src/layout.rs","byte_start":430,"byte_end":434,"line_start":23,"line_end":23,"column_start":6,"column_end":10,"is_primary":true,"text":[{"text":"impl Into<Section> for usize {","highlight_start":6,"highlight_end":10}],"label":null,"suggested_replacement":"From","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/layout.rs","byte_start":435,"byte_end":442,"line_start":23,"line_end":23,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"impl Into<Section> for usize {","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"usize","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/layout.rs","byte_start":448,"byte_end":453,"line_start":23,"line_end":23,"column_start":24,"column_end":29,"is_primary":true,"text":[{"text":"impl Into<Section> for usize {","highlight_start":24,"highlight_end":29}],"label":null,"suggested_replacement":"Section","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/layout.rs","byte_start":463,"byte_end":467,"line_start":24,"line_end":24,"column_start":8,"column_end":12,"is_primary":true,"text":[{"text":"    fn into(self) -> Section {","highlight_start":8,"highlight_end":12}],"label":null,"suggested_replacement":"from","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/layout.rs","byte_start":468,"byte_end":472,"line_start":24,"line_end":24,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"    fn into(self) -> Section {","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"val: usize","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/layout.rs","byte_start":477,"byte_end":484,"line_start":24,"line_end":24,"column_start":22,"column_end":29,"is_primary":true,"text":[{"text":"    fn into(self) -> Section {","highlight_start":22,"highlight_end":29}],"label":null,"suggested_replacement":"Self","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/layout.rs","byte_start":524,"byte_end":528,"line_start":26,"line_end":26,"column_start":20,"column_end":24,"is_primary":true,"text":[{"text":"            inner: self..self + 1,","highlight_start":20,"highlight_end":24}],"label":null,"suggested_replacement":"val","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/layout.rs","byte_start":530,"byte_end":534,"line_start":26,"line_end":26,"column_start":26,"column_end":30,"is_primary":true,"text":[{"text":"            inner: self..self + 1,","highlight_start":26,"highlight_end":30}],"label":null,"suggested_replacement":"val","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/layout.rs:23:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Into<Section> for usize {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `-D clippy::from-over-into` implied by `-D warnings`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: to override `-D warnings` add `#[allow(clippy::from_over_into)]`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: replace the `Into` implementation with `From<usize>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0mimpl \u001b[0m\u001b[0m\u001b[38;5;10mFrom\u001b[0m\u001b[0m<\u001b[0m\u001b[0m\u001b[38;5;10musize\u001b[0m\u001b[0m> for \u001b[0m\u001b[0m\u001b[38;5;10mSection\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    fn \u001b[0m\u001b[0m\u001b[38;5;10mfrom\u001b[0m\u001b[0m(\u001b[0m\u001b[0m\u001b[38;5;10mval: usize\u001b[0m\u001b[0m) -> \u001b[0m\u001b[0m\u001b[38;5;10mSelf\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         Section {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m            inner: \u001b[0m\u001b[0m\u001b[38;5;10mval\u001b[0m\u001b[0m..\u001b[0m\u001b[0m\u001b[38;5;10mval\u001b[0m\u001b[0m + 1,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true","code":{"code":"clippy::from_over_into","explanation":null},"level":"error","spans":[{"file_name":"src/layout.rs","byte_start":559,"byte_end":594,"line_start":31,"line_end":31,"column_start":1,"column_end":36,"is_primary":true,"text":[{"text":"impl Into<Section> for Range<usize> {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"replace the `Into` implementation with `From<std::ops::Range<usize>>`","code":null,"level":"help","spans":[{"file_name":"src/layout.rs","byte_start":564,"byte_end":568,"line_start":31,"line_end":31,"column_start":6,"column_end":10,"is_primary":true,"text":[{"text":"impl Into<Section> for Range<usize> {","highlight_start":6,"highlight_end":10}],"label":null,"suggested_replacement":"From","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/layout.rs","byte_start":569,"byte_end":576,"line_start":31,"line_end":31,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"impl Into<Section> for Range<usize> {","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"Range<usize>","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/layout.rs","byte_start":582,"byte_end":594,"line_start":31,"line_end":31,"column_start":24,"column_end":36,"is_primary":true,"text":[{"text":"impl Into<Section> for Range<usize> {","highlight_start":24,"highlight_end":36}],"label":null,"suggested_replacement":"Section","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/layout.rs","byte_start":604,"byte_end":608,"line_start":32,"line_end":32,"column_start":8,"column_end":12,"is_primary":true,"text":[{"text":"    fn into(self) -> Section {","highlight_start":8,"highlight_end":12}],"label":null,"suggested_replacement":"from","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/layout.rs","byte_start":609,"byte_end":613,"line_start":32,"line_end":32,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"    fn into(self) -> Section {","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"val: Range<usize>","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/layout.rs","byte_start":618,"byte_end":625,"line_start":32,"line_end":32,"column_start":22,"column_end":29,"is_primary":true,"text":[{"text":"    fn into(self) -> Section {","highlight_start":22,"highlight_end":29}],"label":null,"suggested_replacement":"Self","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/layout.rs","byte_start":653,"byte_end":657,"line_start":33,"line_end":33,"column_start":26,"column_end":30,"is_primary":true,"text":[{"text":"        Section { inner: self }","highlight_start":26,"highlight_end":30}],"label":null,"suggested_replacement":"val","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/layout.rs:31:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Into<Section> for Range<usize> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: replace the `Into` implementation with `From<std::ops::Range<usize>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0mimpl \u001b[0m\u001b[0m\u001b[38;5;10mFrom\u001b[0m\u001b[0m<\u001b[0m\u001b[0m\u001b[38;5;10mRange<usize>\u001b[0m\u001b[0m> for \u001b[0m\u001b[0m\u001b[38;5;10mSection\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    fn \u001b[0m\u001b[0m\u001b[38;5;10mfrom\u001b[0m\u001b[0m(\u001b[0m\u001b[0m\u001b[38;5;10mval: Range<usize>\u001b[0m\u001b[0m) -> \u001b[0m\u001b[0m\u001b[38;5;10mSelf\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m        Section { inner: \u001b[0m\u001b[0m\u001b[38;5;10mval\u001b[0m\u001b[0m }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true","code":{"code":"clippy::from_over_into","explanation":null},"level":"error","spans":[{"file_name":"src/layout.rs","byte_start":669,"byte_end":713,"line_start":37,"line_end":37,"column_start":1,"column_end":45,"is_primary":true,"text":[{"text":"impl Into<Section> for RangeInclusive<usize> {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"replace the `Into` implementation with `From<std::ops::RangeInclusive<usize>>`","code":null,"level":"help","spans":[{"file_name":"src/layout.rs","byte_start":674,"byte_end":678,"line_start":37,"line_end":37,"column_start":6,"column_end":10,"is_primary":true,"text":[{"text":"impl Into<Section> for RangeInclusive<usize> {","highlight_start":6,"highlight_end":10}],"label":null,"suggested_replacement":"From","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/layout.rs","byte_start":679,"byte_end":686,"line_start":37,"line_end":37,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"impl Into<Section> for RangeInclusive<usize> {","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":"RangeInclusive<usize>","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/layout.rs","byte_start":692,"byte_end":713,"line_start":37,"line_end":37,"column_start":24,"column_end":45,"is_primary":true,"text":[{"text":"impl Into<Section> for RangeInclusive<usize> {","highlight_start":24,"highlight_end":45}],"label":null,"suggested_replacement":"Section","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/layout.rs","byte_start":723,"byte_end":727,"line_start":38,"line_end":38,"column_start":8,"column_end":12,"is_primary":true,"text":[{"text":"    fn into(self) -> Section {","highlight_start":8,"highlight_end":12}],"label":null,"suggested_replacement":"from","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/layout.rs","byte_start":728,"byte_end":732,"line_start":38,"line_end":38,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"    fn into(self) -> Section {","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"val: RangeInclusive<usize>","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/layout.rs","byte_start":737,"byte_end":744,"line_start":38,"line_end":38,"column_start":22,"column_end":29,"is_primary":true,"text":[{"text":"    fn into(self) -> Section {","highlight_start":22,"highlight_end":29}],"label":null,"suggested_replacement":"Self","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/layout.rs","byte_start":784,"byte_end":788,"line_start":40,"line_end":40,"column_start":20,"column_end":24,"is_primary":true,"text":[{"text":"            inner: self.clone().into_inner().0..self.into_inner().1 + 1,","highlight_start":20,"highlight_end":24}],"label":null,"suggested_replacement":"val","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/layout.rs","byte_start":813,"byte_end":817,"line_start":40,"line_end":40,"column_start":49,"column_end":53,"is_primary":true,"text":[{"text":"            inner: self.clone().into_inner().0..self.into_inner().1 + 1,","highlight_start":49,"highlight_end":53}],"label":null,"suggested_replacement":"val","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/layout.rs:37:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Into<Section> for RangeInclusive<usize> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: replace the `Into` implementation with `From<std::ops::RangeInclusive<usize>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0mimpl \u001b[0m\u001b[0m\u001b[38;5;10mFrom\u001b[0m\u001b[0m<\u001b[0m\u001b[0m\u001b[38;5;10mRangeInclusive<usize>\u001b[0m\u001b[0m> for \u001b[0m\u001b[0m\u001b[38;5;10mSection\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    fn \u001b[0m\u001b[0m\u001b[38;5;10mfrom\u001b[0m\u001b[0m(\u001b[0m\u001b[0m\u001b[38;5;10mval: RangeInclusive<usize>\u001b[0m\u001b[0m) -> \u001b[0m\u001b[0m\u001b[38;5;10mSelf\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         Section {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m            inner: \u001b[0m\u001b[0m\u001b[38;5;10mval\u001b[0m\u001b[0m.clone().into_inner().0..\u001b[0m\u001b[0m\u001b[38;5;10mval\u001b[0m\u001b[0m.into_inner().1 + 1,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 7 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 7 previous errors\u001b[0m\n\n"}
